{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/todo.service\";\nimport * as i2 from \"@angular/forms\";\nclass TodoFormComponent {\n  constructor(todoService) {\n    this.todoService = todoService;\n    this.title = \"\";\n    this.description = \"\";\n    this.dueDate = undefined;\n  }\n  addTodo() {\n    if (this.title.trim()) {\n      this.todoService.addTodo({\n        id: Date.now().toString(),\n        title: this.title,\n        description: this.description,\n        dueDate: this.dueDate,\n        completed: false,\n        createdAt: new Date()\n      });\n      this.title = \"\";\n      this.description = \"\";\n      this.dueDate = undefined;\n    }\n  }\n  static {\n    this.ɵfac = function TodoFormComponent_Factory(t) {\n      return new (t || TodoFormComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TodoFormComponent,\n      selectors: [[\"app-todo-form\"]],\n      decls: 18,\n      vars: 3,\n      consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"placeholder\", \"Enter todo title\", \"required\", \"\", 1, \"form-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", \"placeholder\", \"Enter todo description\", 1, \"form-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dueDate\"], [\"type\", \"date\", \"id\", \"dueDate\", \"name\", \"dueDate\", 1, \"form-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function TodoFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n          i0.ɵɵtext(2, \"Add New Todo\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function TodoFormComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.addTodo();\n          });\n          i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\", 2);\n          i0.ɵɵtext(6, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function TodoFormComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.title = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 4);\n          i0.ɵɵtext(10, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function TodoFormComponent_Template_input_ngModelChange_11_listener($event) {\n            return ctx.description = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 6);\n          i0.ɵɵtext(14, \"Due Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function TodoFormComponent_Template_input_ngModelChange_15_listener($event) {\n            return ctx.dueDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"button\", 8);\n          i0.ɵɵtext(17, \"Add Todo\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.title);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.description);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.dueDate);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n      encapsulation: 2\n    });\n  }\n}\nexport { TodoFormComponent };","map":{"version":3,"names":["TodoFormComponent","constructor","todoService","title","description","dueDate","undefined","addTodo","trim","id","Date","now","toString","completed","createdAt","i0","ɵɵdirectiveInject","i1","TodoService","selectors","decls","vars","consts","template","TodoFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TodoFormComponent_Template_form_ngSubmit_3_listener","TodoFormComponent_Template_input_ngModelChange_7_listener","$event","TodoFormComponent_Template_input_ngModelChange_11_listener","TodoFormComponent_Template_input_ngModelChange_15_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Korisnik\\Desktop\\Todo App\\todo-angular-solved\\src\\app\\components\\todo-form\\todo-form.component.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { TodoService } from \"../../services/todo.service\";\r\n\r\n@Component({\r\n  selector: \"app-todo-form\",\r\n  template: `\r\n    <div>\r\n      <h2>Add New Todo</h2>\r\n      <form (ngSubmit)=\"addTodo()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            class=\"form-input\"\r\n            [(ngModel)]=\"title\"\r\n            name=\"title\"\r\n            placeholder=\"Enter todo title\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"description\">Description</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"description\"\r\n            class=\"form-input\"\r\n            [(ngModel)]=\"description\"\r\n            name=\"description\"\r\n            placeholder=\"Enter todo description\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"dueDate\">Due Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"dueDate\"\r\n            class=\"form-input\"\r\n            [(ngModel)]=\"dueDate\"\r\n            name=\"dueDate\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">Add Todo</button>\r\n      </form>\r\n    </div>\r\n  `,\r\n  styles: [],\r\n})\r\nexport class TodoFormComponent {\r\n  title = \"\";\r\n  description = \"\";\r\n  dueDate: string | undefined = undefined;\r\n\r\n  constructor(private todoService: TodoService) {}\r\n\r\n  addTodo() {\r\n    if (this.title.trim()) {\r\n      this.todoService.addTodo({\r\n        id: Date.now().toString(),\r\n        title: this.title,\r\n        description: this.description,\r\n        dueDate: this.dueDate,\r\n        completed: false,\r\n        createdAt: new Date(),\r\n      });\r\n      this.title = \"\";\r\n      this.description = \"\";\r\n      this.dueDate = undefined;\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}