{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nclass TodoService {\n  constructor() {\n    this.todos = [];\n    this.todosSubject = new BehaviorSubject([]);\n  }\n  getTodos() {\n    return this.todosSubject.asObservable();\n  }\n  addTodo(todo) {\n    this.todos = [...this.todos, todo];\n    this.todosSubject.next(this.todos);\n  }\n  toggleTodo(id) {\n    this.todos = this.todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo);\n    this.todosSubject.next(this.todos);\n  }\n  deleteTodo(id) {\n    this.todos = this.todos.filter(todo => todo.id !== id);\n    this.todosSubject.next(this.todos);\n  }\n  static {\n    this.ɵfac = function TodoService_Factory(t) {\n      return new (t || TodoService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TodoService,\n      factory: TodoService.ɵfac,\n      providedIn: \"root\"\n    });\n  }\n}\nexport { TodoService };","map":{"version":3,"names":["BehaviorSubject","TodoService","constructor","todos","todosSubject","getTodos","asObservable","addTodo","todo","next","toggleTodo","id","map","completed","deleteTodo","filter","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Korisnik\\Desktop\\Todo App\\todo-angular-solved\\src\\app\\services\\todo.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { Todo } from \"../models/todo.model\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TodoService {\r\n  private todos: Todo[] = [];\r\n  private todosSubject = new BehaviorSubject<Todo[]>([]);\r\n\r\n  constructor() {}\r\n\r\n  getTodos(): Observable<Todo[]> {\r\n    return this.todosSubject.asObservable();\r\n  }\r\n\r\n  addTodo(todo: Todo): void {\r\n    this.todos = [...this.todos, todo];\r\n    this.todosSubject.next(this.todos);\r\n  }\r\n\r\n  toggleTodo(id: string): void {\r\n    this.todos = this.todos.map((todo) =>\r\n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n    );\r\n    this.todosSubject.next(this.todos);\r\n  }\r\n\r\n  deleteTodo(id: string): void {\r\n    this.todos = this.todos.filter((todo) => todo.id !== id);\r\n    this.todosSubject.next(this.todos);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAGlD,MAGaC,WAAW;EAItBC,YAAA;IAHQ,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,YAAY,GAAG,IAAIJ,eAAe,CAAS,EAAE,CAAC;EAEvC;EAEfK,QAAQA,CAAA;IACN,OAAO,IAAI,CAACD,YAAY,CAACE,YAAY,EAAE;EACzC;EAEAC,OAAOA,CAACC,IAAU;IAChB,IAAI,CAACL,KAAK,GAAG,CAAC,GAAG,IAAI,CAACA,KAAK,EAAEK,IAAI,CAAC;IAClC,IAAI,CAACJ,YAAY,CAACK,IAAI,CAAC,IAAI,CAACN,KAAK,CAAC;EACpC;EAEAO,UAAUA,CAACC,EAAU;IACnB,IAAI,CAACR,KAAK,GAAG,IAAI,CAACA,KAAK,CAACS,GAAG,CAAEJ,IAAI,IAC/BA,IAAI,CAACG,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGH,IAAI;MAAEK,SAAS,EAAE,CAACL,IAAI,CAACK;IAAS,CAAE,GAAGL,IAAI,CAChE;IACD,IAAI,CAACJ,YAAY,CAACK,IAAI,CAAC,IAAI,CAACN,KAAK,CAAC;EACpC;EAEAW,UAAUA,CAACH,EAAU;IACnB,IAAI,CAACR,KAAK,GAAG,IAAI,CAACA,KAAK,CAACY,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACG,EAAE,KAAKA,EAAE,CAAC;IACxD,IAAI,CAACP,YAAY,CAACK,IAAI,CAAC,IAAI,CAACN,KAAK,CAAC;EACpC;;;uBAzBWF,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA;;SAEPjB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}